package de.qspool.clementineremote;

import android.annotation.TargetApi;
import android.net.nsd.NsdManager;
import android.net.nsd.NsdServiceInfo;
import android.os.Build;
import android.util.Log;

/**
 * TODO: Insert description here. (generated by johnmaguire)
 */
@TargetApi(Build.VERSION_CODES.JELLY_BEAN)
public class MulticastServiceListener implements NsdManager.DiscoveryListener {
  
  private static final String TAG = MulticastServiceListener.class.getName();
  
  public static final String CLEMENTINE_SERVICE_TYPE = "_clementine._tcp";

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onDiscoveryStarted(java.lang.String)
   */
  @Override
  public void onDiscoveryStarted(String serviceType) {
    Log.d(TAG, "Started mdns discovery");
  }

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onDiscoveryStopped(java.lang.String)
   */
  @Override
  public void onDiscoveryStopped(String serviceType) {
    Log.d(TAG, "Stopped mdns discovery");
  }

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onServiceFound(android.net.nsd.NsdServiceInfo)
   */
  @Override
  public void onServiceFound(NsdServiceInfo serviceInfo) {
    Log.d(TAG, "Found service:" + serviceInfo.getServiceType());
    if (serviceInfo.getServiceType() != CLEMENTINE_SERVICE_TYPE) {
      return;
    }
    Log.d(TAG, "Found clementine service: " + serviceInfo.getServiceName());
  }

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onServiceLost(android.net.nsd.NsdServiceInfo)
   */
  @Override
  public void onServiceLost(NsdServiceInfo serviceInfo) {
  }

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onStartDiscoveryFailed(java.lang.String, int)
   */
  @Override
  public void onStartDiscoveryFailed(String serviceType, int errorCode) {
  }

  /* (non-Javadoc)
   * @see android.net.nsd.NsdManager.DiscoveryListener#onStopDiscoveryFailed(java.lang.String, int)
   */
  @Override
  public void onStopDiscoveryFailed(String serviceType, int errorCode) {
  }

}
